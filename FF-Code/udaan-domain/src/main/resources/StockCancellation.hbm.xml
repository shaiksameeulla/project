<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

	<class name="com.ff.domain.stockmanagement.operations.cancel.StockCancellationDO" table="ff_f_stock_cancellation">
		<id name="stockCancelledId" type="java.lang.Long">
			<column name="STOCK_CANCELLED_ID" />
			<generator class="native" />
		</id>
		
		<property name = "cancellationNumber" column = "CANCELLATION_NUMBER" />
		<property name = "reason" column = "REASON" />
		<property name = "cancelledDate" column = "CANCELLED_DATE" />
		<property name = "issueNumber" column = "ISSUE_NUMBER" />
		<property name = "quantity" column = "QUANTITY" />
		
		<property name="officeProductCodeInSeries" column="OFFICE_PRODUCT_CODE_IN_SERIES" />
		<property name="startLeaf" column="START_LEAF" />
		<property name="endLeaf" column="END_LEAF" />
		<property name="startSerialNumber" column="START_SI_NUMBER" />
		<property name="endSerialNumber" column="END_SI_NUMBER" />
		
		<!--  common attributes  START -->
		
		<property name="transactionStatus" column="TRANS_ACTIVE_STATUS" />
		<property name="transactionCreateDate" column="TRANS_CREATED_DATE_TIME" />
		<property name="transactionModifiedDate" column="TRANS_MODIFIED_DATE_TIME" />
		
		<!-- <property name="nodeId" column="TRANS_NODE_ID" /> -->
		<property name="sapStatus" column="DT_SAP_OUTBOUND" />
		<property name="sapTimestamp" column="SAP_TIMESTAMP" />
		<property name="createdBy" column="CREATED_BY_USER" />
		<property name="updatedBy" column="UPDATED_BY_USER" />
		
		<property name="dtToBranch">
			<column name="DT_TO_BRANCH" />
		</property>
		
		<!--  common attributes  END-->
			
		<many-to-one name="cancellationOfficeDO"
			class="com.ff.domain.organization.OfficeDO" lazy="false" fetch="join">
			<column name="CANCELLATION_OFFICE_ID" />
		</many-to-one>
	
		<many-to-one name="itemDO"
			class="com.ff.domain.stockmanagement.masters.ItemDO" lazy="false" fetch="join">
			<column name="ITEM_ID" />
		</many-to-one>
		
		<!-- Many -to- one relationships (Common attributes) START-->
		
		<!-- <many-to-one name="createdByUserDO"
			class="com.ff.domain.umc.UserDO" lazy="false" fetch="join">
			<column name="CREATED_BY_USER" />
		</many-to-one>
		
		<many-to-one name="updatedByUserDO"
			class="com.ff.domain.umc.UserDO" lazy="false" fetch="join">
			<column name="UPDATED_BY_USER" />
		</many-to-one> -->
		
		<!-- Many -to- one relationships (Common attributes) END-->
		
	</class>

<query name="isSeriesCancelled">
		<![CDATA[ select cancel.stockCancelledId
 			FROM com.ff.domain.stockmanagement.operations.cancel.StockCancellationDO cancel
 			WHERE cancel.officeProductCodeInSeries =:officeCode
 			    AND 
 			cancel.transactionStatus = :transactionStatus
 			    AND  
 			( :startLeaf between cancel.startLeaf and cancel.endLeaf
 				    OR 
 			:endLeaf between cancel.startLeaf and cancel.endLeaf
 					OR
 			cancel.startLeaf between :startLeaf and :endLeaf
 				    OR
 			cancel.endLeaf between :startLeaf and :endLeaf 
 			)
 			
 			
		]]>
</query>	

<query name="isLeafCancelledForIntegration">
		<![CDATA[ select cancel.stockCancelledId
 			FROM com.ff.domain.stockmanagement.operations.cancel.StockCancellationDO cancel
 			WHERE :startSerialNumber between cancel.startSerialNumber and cancel.endSerialNumber
 			AND length(cancel.startSerialNumber) = length(:startSerialNumber)
       		AND cancel.transactionStatus = :transactionStatus
 			
 			
		]]>
</query>	


<query name="getMaxCancellationNumber">
	<![CDATA[
		select 	max(cancel.cancellationNumber)from com.ff.domain.stockmanagement.operations.cancel.StockCancellationDO cancel 
		where  	cancel.transactionStatus =:transactionStatus
		AND length(cancel.cancellationNumber)=:numberLength
		AND 	cancel.cancellationNumber like :prefix
		AND 	cancel.cancellationOfficeDO.officeId = :officeId
	 ]]>
</query>

<query name="findCancelDtlsByCancellationNumber">
	<![CDATA[
		FROM com.ff.domain.stockmanagement.operations.cancel.StockCancellationDO cancelDtls  
		WHERE cancelDtls.cancellationNumber = :cancellationNumber
		AND cancelDtls.cancellationOfficeDO.officeId = :officeId
	 ]]>
</query>


<query name="getStockCancellationCount">
		<![CDATA[ 
			SELECT 	COUNT(*)
			FROM	com.ff.domain.stockmanagement.operations.cancel.StockCancellationDO cancellationDO 
			WHERE	cancellationDO.sapStatus=:sapStatus
		]]>
</query>

<query name="getStockCancellationDetailsForSAP">
		<![CDATA[ 
			FROM	com.ff.domain.stockmanagement.operations.cancel.StockCancellationDO cancellationDO 
			WHERE	cancellationDO.sapStatus=:sapStatus
		]]>
</query>

<query name="updateStockCancellationDetailsForSAP">
		<![CDATA[ 
			UPDATE	com.ff.domain.stockmanagement.operations.cancel.StockCancellationDO cancellationDO  
 			SET		cancellationDO.sapStatus=:sapStatus,cancellationDO.sapTimestamp=:sapTimestamp
 			WHERE	cancellationDO.cancellationNumber=:cancellationNumber
		]]>
</query>

</hibernate-mapping>
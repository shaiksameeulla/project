<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class name="com.ff.domain.umc.UserOfficeRightsMappingDO" table="ff_d_user_office_rights">
		<id name="userRightappingId" type="java.lang.Integer">
			<column name="USER_MAPPING_ID" />
			<generator class="native" />
		</id>
		
		<many-to-one name="user" class="com.ff.domain.umc.UserDO" lazy="false" fetch="join">
			<column name="USER_ID" />
		</many-to-one>
		
		<many-to-one name="office" class="com.ff.domain.organization.OfficeDO" lazy="false" fetch="join">
			<column name="OFFICE_ID" />
		</many-to-one>
		
		<property name="mappedTo" type="java.lang.String">
			<column name="MAPPED_TO" />
		</property>
		
		<property name="status" type="java.lang.String">
			<column name="STATUS" />
		</property>
		
		  <property name="dtToBranch">
			<column name="DT_TO_BRANCH" />
		</property>
		
		<!-- <property name="dtToCentral">
			<column name="DT_TO_CENTRAL" />
		</property> -->
   
		
	</class>
	
	<query name="getUserOfficeRightsId" >
		<![CDATA[
			SELECT userOfficeRights.userRightappingId from com.ff.domain.umc.UserOfficeRightsMappingDO userOfficeRights where userOfficeRights.user.userId = :userId  and 
			userOfficeRights.office.officeId =:officeId) ]]>
	</query>
	
	<query name="getOfficesMappedToUser">
		<![CDATA[
			SELECT userOfficeRights.office 
			FROM com.ff.domain.umc.UserOfficeRightsMappingDO userOfficeRights
			WHERE userOfficeRights.user.userId = :userId	
			]]>
	</query>
	
        
  
	<!-- <query name="getUnsyncOutboundUserOfficeRight">
		<![CDATA[from com.ff.domain.umc.UserOfficeRightsMappingDO userOfficeRights where userOfficeRights.office.officeId=:branchId and (userOfficeRights.dtToBranch='N' or userOfficeRights.dtToBranch is null)]]>
	</query> -->
	
</hibernate-mapping>
	
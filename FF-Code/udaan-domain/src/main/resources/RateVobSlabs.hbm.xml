<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>

	<class name="com.ff.domain.ratemanagement.masters.RateVobSlabsDO" table="ff_d_rate_vob_slabs">
		<id name="rateVobSlabsId" type="java.lang.Integer" column="RATE_VOB_SLABS_ID">
			<generator class="native" />
		</id>
			
		<property name="position" type="java.lang.Integer" >
        <column name="POSITION" />
        </property>
		
		<many-to-one name="vobSlabDO" class="com.ff.domain.ratemanagement.masters.VobSlabDO"  lazy="false"  fetch="join">
        <column name="VOB_SLAB" ></column>
        </many-to-one>	
        <many-to-one name="rateCustomerProductCatMapDO" class="com.ff.domain.ratemanagement.masters.RateCustomerProductCatMapDO"  lazy="false"  fetch="join">
        <column name="RATE_CUSTOMER_PRODUCT_CAT_MAP" ></column>
        </many-to-one>
        <property name="dtToBranch" column="DT_TO_BRANCH"/>
    </class>
    
     <query name="getVobSlabsByDate">
		<![CDATA[
 				FROM com.ff.domain.ratemanagement.masters.RateVobSlabsDO rateVobSlab where 
				rateVobSlab.vobSlabDO.effectiveFrom <=:effectiveFrom
				AND (rateVobSlab.vobSlabDO.effectiveTo IS NULL or rateVobSlab.vobSlabDO.effectiveTo >=:effectiveTo)
				AND rateVobSlab.rateCustomerProductCatMapDO.rateCustomerCategoryDO.rateCustomerCategoryCode =:rateCustomerCategoryCode 
				AND rateVobSlab.rateCustomerProductCatMapDO.rateProductCategoryDO.rateProductCategoryType =:rateProductCategoryType
				ORDER BY rateVobSlab.rateCustomerProductCatMapDO.rateProductCategoryDO.rateProductCategoryId, rateVobSlab.position 
				]]>
	</query>

</hibernate-mapping>
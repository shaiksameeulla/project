<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<class name="com.ff.domain.geography.RegionDO" table="ff_d_region">
	<cache usage="read-only" region="masterCache"/>
		<id name="regionId" column="REGION_ID" type="java.lang.Integer" >
			<generator class="native" />
		</id>
		
		<property name="regionCode"  column="REGION_CODE" type="java.lang.String" />
		<property name="regionName" column="REGION_NAME" type="java.lang.String"/>
		<property  name="regionDisplayName" column="REGION_DISPLAY_NAME"	type="java.lang.String"/>
		<property  name="zone" column="ZONE" type="java.lang.Integer"/>	
		<property name="dtToBranch">
			<column name="DT_TO_BRANCH" />
		</property>		
	</class>
	<query name="getAllRegions">
		<![CDATA[
			FROM com.ff.domain.geography.RegionDO region 
			ORDER BY region.regionName
		]]>
	</query>
	<query name="isRegionExists">
		<![CDATA[
			FROM com.ff.domain.geography.RegionDO region 
			where region.regionCode=:regionCode 
			
		]]>
	</query>
	<query name="getAllRegionByRegionCode">
		<![CDATA[
			FROM com.ff.domain.geography.RegionDO region 
			where region.regionCode=:regionCode 
			
		]]>
	</query>
	
	<query name="getAllRegionForBOUser">
		<![CDATA[
			SELECT distinct region
			FROM com.ff.domain.geography.RegionDO region 
			where region.regionId in ( 	select distinct  office.mappedRegionDO.regionId
										from com.ff.domain.organization.OfficeDO office, 
		    							com.ff.domain.umc.UserOfficeRightsMappingDO rights 
										where rights.office.officeId = office.officeId
										and office.officeTypeDO.offcTypeCode = 'BO'
										and rights.user.userId = :userId
										AND rights.status = 'A'
             						)
      		OR  region.regionId in ( 	select distinct  office.mappedRegionDO.regionId
										from com.ff.domain.organization.OfficeDO office
										WHERE office.officeId = :officeId
             						)
			ORDER BY region.regionName
			
		]]>
	</query>
	
	<query name="getAllRegionByUsertype">
		<![CDATA[
			SELECT  distinct region
			FROM com.ff.domain.geography.RegionDO region 
			where region.regionId in (  select distinct  office.mappedRegionDO.regionId
									    from com.ff.domain.organization.OfficeDO office, 
		   							    com.ff.domain.umc.UserOfficeRightsMappingDO rights 
										where rights.office.officeId = office.officeId
										and (office.officeTypeDO.offcTypeCode = :officeType
										and rights.user.userId = :userId
										AND rights.status = 'A')
										or office.reportingHUB = :officeId
            						 )
            	OR  region.regionId in ( 	select distinct  office.mappedRegionDO.regionId
											from com.ff.domain.organization.OfficeDO office
											WHERE office.officeId = :officeId )
			ORDER BY region.regionName
			
		]]>
		</query>
		
		<query name="getAllRegionForRhoUser">
		<![CDATA[
			FROM com.ff.domain.geography.RegionDO region 
			where region.regionId in ( select distinct  office.mappedRegionDO.regionId
			from com.ff.domain.organization.OfficeDO office, 
		    com.ff.domain.umc.UserOfficeRightsMappingDO rights 
			where rights.office.officeId = office.officeId
			and office.officeTypeDO.offcTypeCode = 'RO'
			and rights.user.userId = :userId
			or office.reportingRHO = :officeId
             )
			ORDER BY region.regionName
			
		]]>
	</query>
</hibernate-mapping>
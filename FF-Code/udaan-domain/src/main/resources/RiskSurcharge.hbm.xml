<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>

	<class name="com.ff.domain.ratemanagement.masters.RiskSurchargeDO" table="ff_d_risk_surcharge">
		<id name="riskSurchargeId" type="java.lang.Integer" column="RISK_SURCHARGE_ID">
			<generator class="native" />
		</id>
			
	    <property name="rateComponentCode" column="RATE_COMPONENT_CODE" />

		<many-to-one name="rateCustomerCategoryDO" class="com.ff.domain.ratemanagement.masters.RateCustomerCategoryDO"  lazy="false" fetch="join">
        <column name="CUSTOMER_CATEGORY" ></column>
        </many-to-one>	
        
        <property name="minimumValue" column="MINIMUM" />
        <property name="maximumValue" column="MAXIMUM" />
        <property name="considerValue" column="CONSIDER_VALUE" />
        <property name="chargeApplicable" column="CHARGE_APPLICABLE" />
        <property name="dataFrom" column="DATA_FROM" />
        <property name="insuredBy" column="INSURED_BY" />
      	<property name="dtToBranch" column="DT_TO_BRANCH"/>
    </class>
  	<query name="getRiskSurcharge">
		<![CDATA[
			 SELECT riskSurchargeDO
			 FROM com.ff.domain.ratemanagement.masters.RiskSurchargeDO riskSurchargeDO
			 INNER JOIN riskSurchargeDO.rateCustomerCategoryDO rateCustomerCategoryDO
			 WHERE ( ((riskSurchargeDO.considerValue = 'RN') AND (:declaredValue BETWEEN riskSurchargeDO.minimumValue AND riskSurchargeDO.maximumValue))
			 		 OR ((riskSurchargeDO.considerValue = 'MN') and (:declaredValue > riskSurchargeDO.minimumValue)))
			 AND rateCustomerCategoryDO.rateCustomerCategoryId = :customerCategory
		]]>
	</query>
	
</hibernate-mapping>
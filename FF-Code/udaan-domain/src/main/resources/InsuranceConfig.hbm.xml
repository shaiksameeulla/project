<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

	<class name="com.ff.domain.serviceOffering.InsuranceConfigDO" table="ff_d_insurance_mandatory_config">
		<id name="insuranceConfigId" type="java.lang.Integer">
			<column name="INSURANCE_MANDATORY_CONFIG_ID" />
			<generator class="native" />
		</id>
		
		<property name="insuredById" type="java.lang.Integer">
			<column name="INSURED_BY" />
		</property>
		
  		<property name="minDeclaredValue" type="java.lang.Double">
			<column name="MIN_DECLARED_VALUE" />
		</property>
		
		<property name="maxDeclaredValue" type="java.lang.Double">
			<column name="MAX_DECLARED_VALUE" />
		</property>
		
		<property name="isPolicyNoMandatory" type="java.lang.String">
			<column name="IS_POLICY_NO_MANDATORY" />
		</property>
		
		<many-to-one name="bookingType" class="com.ff.domain.booking.BookingTypeDO" lazy="false" fetch="join">
		<column  name="BOOKING_TYPE" />
		</many-to-one>
		
		<property name="dtToBranch">
			<column name="DT_TO_BRANCH" />
		</property>	
		</class>
		
		<!-- <query name="getInsurenceConfigDtls">
	       <![CDATA[
	       FROM com.ff.domain.serviceOffering.InsuranceConfigDO insurance where  insurance.bookingType.bookingType=:bookingType
	       ]]>
	    </query>	 -->	
		<query name="getInsurenceConfigDtls">
	       <![CDATA[
	       FROM com.ff.domain.serviceOffering.InsuranceConfigDO insurance where 
	       :declaredValue between insurance.minDeclaredValue and insurance.maxDeclaredValue
	       and bookingType.bookingType=:bookingType
	       ]]>
	    </query>
	    
	    <query name="validatensurenceConfigDtls">
	       <![CDATA[
	       FROM com.ff.domain.serviceOffering.InsuranceConfigDO insurance where 
	       :declaredValue between insurance.minDeclaredValue and insurance.maxDeclaredValue
	       and bookingType.bookingType=:bookingType
	       and insurance.insuredById=:insuredById
	       ]]>
	    </query>
		
	</hibernate-mapping>
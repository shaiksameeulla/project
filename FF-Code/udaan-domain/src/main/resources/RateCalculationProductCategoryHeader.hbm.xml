<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>

	
	<class name="com.ff.domain.ratemanagement.operations.ratequotation.RateCalculationProductCategoryHeaderDO" table="ff_f_rate_quotation_product_category_header">
		<id name="rateQuotationProductCategoryHeaderId" type="java.lang.Integer" column="RATE_QUOTATION_PRODUCT_CATEGORY_HEADER_ID">
			<generator class="native" />
		</id>
		
		
		<many-to-one name="rateProductCategory" class="com.ff.domain.ratemanagement.masters.RateProductCategoryDO"  lazy="false"  fetch="join">
		<column name="RATE_PRODUCT_CATEGORY" />
		</many-to-one> 
		
		<many-to-one name="minimumChargeableWeightDO" class="com.ff.domain.ratemanagement.masters.RateMinChargeableWeightDO"  lazy="false"  fetch="join">
		<column name="MINIMUM_CHARGEABLE_WEIGHT_ID" />
		</many-to-one>
		
		<many-to-one name="rateQuotationDO" class="com.ff.domain.ratemanagement.operations.ratequotation.RateCalculationQuotationDO"  lazy="false"  fetch="join">
		<column name="RATE_QUOTATION" />
		</many-to-one>
		
		<property name="calculationMethod" column="CALCULATION_METHOD"/>
		
    </class>
	<query name="getQuotationForCustomerAndProduct">
		<![CDATA[
				SELECT     productHeader
                FROM       com.ff.domain.ratemanagement.operations.ratequotation.RateCalculationProductCategoryHeaderDO productHeader
                INNER JOIN productHeader.rateQuotationDO quotation
                INNER JOIN quotation.customer  customerDO
                INNER JOIN productHeader.rateProductCategory prodCat,
                com.ff.domain.ratemanagement.masters.RateCalculationContractDO rateContract
                WHERE     quotation.rateQuotationId = rateContract.rateQuotationId
                AND        prodCat.rateProductCategoryId IN (    SELECT     rateProductCategoryId from com.ff.domain.ratemanagement.masters.RateProductProductCategoryMapDO
                                                            WHERE    productId = (     SELECT productId FROM com.ff.domain.serviceOffering.ProductDO
                                                                                    WHERE productCode =:productCode)
                                                          )
                AND        customerDO.customerCode =:customerCode
                AND     quotation.rateQuotationType =:rateQuotationType
                AND     quotation.quotationUsedFor = 'C'
                AND        (rateContract.contractStatus = 'A' OR rateContract.contractStatus = 'I'  OR rateContract.contractStatus = 'B')
                AND     (:currentDate >= rateContract.validFromDate)
                ORDER BY   rateContract.validFromDate DESC    
		]]>
	</query>
	<query name="isProductValidForCreditCustomerContract">
		<![CDATA[
 				SELECT	rateCalculationPrdCatryHeader.rateProductCategory.rateProductCategoryId
 				FROM	com.ff.domain.ratemanagement.operations.ratequotation.RateQuotationProductCategoryHeaderDO  rateCalculationPrdCatryHeader
 				INNER JOIN rateCalculationPrdCatryHeader.rateQuotationDO quotation
 				INNER JOIN quotation.customer customerDO
 				INNER JOIN rateCalculationPrdCatryHeader.rateProductCategory rateProductCategoryDO,
 				com.ff.domain.ratemanagement.masters.RateContractDO contract,
 				com.ff.domain.ratemanagement.masters.RateProductProductCategoryMapDO  map
 				WHERE 	quotation.rateQuotationId = contract.rateQuotationDO.rateQuotationId
 				AND		quotation.quotationUsedFor = 'C'
 				AND		(contract.contractStatus = 'A' OR contract.contractStatus = 'I')
 				AND		(:currentDate >= contract.validFromDate)
 				AND		customerDO.customerCode=:customerCode
 				AND 	customerDO.status = 'A'
 				AND		rateProductCategoryDO.rateProductCategoryId = map.rateProductCategoryId
 				AND 	map.productId IN (	SELECT 	pct.productDO.productId 
 											FROM 	com.ff.domain.ratemanagement.masters.ProductCustomerTypeMapDO pct
 											WHERE	pct.customerTypeDO.customerTypeId = customerDO.customerType.customerTypeId
 											AND		pct.productDO.productCode =:productCode)
				]]>
	</query>
		
</hibernate-mapping>
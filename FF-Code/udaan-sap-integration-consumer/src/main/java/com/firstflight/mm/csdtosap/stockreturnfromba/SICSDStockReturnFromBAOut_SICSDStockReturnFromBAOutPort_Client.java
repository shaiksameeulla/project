
package com.firstflight.mm.csdtosap.stockreturnfromba;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * This class was generated by Apache CXF 2.7.1
 * 2013-09-03T12:29:17.926+05:30
 * Generated source version: 2.7.1
 * 
 */
public final class SICSDStockReturnFromBAOut_SICSDStockReturnFromBAOutPort_Client {
	
	/** The logger. */
	private final static Logger LOGGER = LoggerFactory
			.getLogger(SICSDStockReturnFromBAOut_SICSDStockReturnFromBAOutPort_Client.class);

    private static final QName SERVICE_NAME = new QName("http://FirstFlight.com/MM/CSDToSAP/StockReturnFromBA", "SI_CSD_StockReturnFromBA_OutService");

    private SICSDStockReturnFromBAOut_SICSDStockReturnFromBAOutPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = SICSDStockReturnFromBAOutService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
            	LOGGER.error("SICSDStockReturnFromBAOut_SICSDStockReturnFromBAOutPort_Client::main::error::",e);
            }
        }
      
        SICSDStockReturnFromBAOutService ss = new SICSDStockReturnFromBAOutService(wsdlURL, SERVICE_NAME);
        SICSDStockReturnFromBAOut port = ss.getSICSDStockReturnFromBAOutPort();  
        
        {
        	LOGGER.debug("Invoking siCSDStockReturnFromBAOut...");
        com.firstflight.mm.csdtosap.stockreturnfromba.DTCSDStockReturnFromBA _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBA = new com.firstflight.mm.csdtosap.stockreturnfromba.DTCSDStockReturnFromBA();
        java.util.List<com.firstflight.mm.csdtosap.stockreturnfromba.DTCSDStockReturnFromBA.StockReturnFromBA> _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBA = new java.util.ArrayList<com.firstflight.mm.csdtosap.stockreturnfromba.DTCSDStockReturnFromBA.StockReturnFromBA>();
        com.firstflight.mm.csdtosap.stockreturnfromba.DTCSDStockReturnFromBA.StockReturnFromBA _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBAVal1 = new com.firstflight.mm.csdtosap.stockreturnfromba.DTCSDStockReturnFromBA.StockReturnFromBA();
        _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBAVal1.setFROMBACODE("FROMBACODE-987118120");
        _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBAVal1.setITEMCODE("ITEMCODE-1543592964");
        _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBAVal1.setTRANSCREATEDDATETIME(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2013-07-24T18:56:00.474+05:30"));
        _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBAVal1.setTRANSFERNUMBER("TRANSFERNUMBER1548802455");
        _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBAVal1.setTOBRANCH("TOBRANCH-977471725");
        _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBAVal1.setQUANTITY(new java.math.BigDecimal("-8600796151979982545.6224769491866831809"));
        _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBAVal1.setSAPTimestamp("SAPTimestamp-1728201790");
        _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBA.add(_siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBAVal1);
        _siCSDStockReturnFromBAOut_mtCSDStockReturnFromBA.getStockReturnFromBA().addAll(_siCSDStockReturnFromBAOut_mtCSDStockReturnFromBAStockReturnFromBA);
        port.siCSDStockReturnFromBAOut(_siCSDStockReturnFromBAOut_mtCSDStockReturnFromBA);


        }

        System.exit(0);
    }

}

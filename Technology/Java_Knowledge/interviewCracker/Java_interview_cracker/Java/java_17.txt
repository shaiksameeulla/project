java 17 features became crucial after the release of Spring Boot 3.0.
 Needless to say, the use of Java 17 has become mandatory since Spring Boot 3.0
 
 Java 17 is an LTS (Long-term support) release of the Java programming language. As it is an LTS version, it will receive prolonged support and security updates for a minimum of eight years
 
 Java SE 8 (LTS)
 Java SE 11 (LTS)
 Java SE 17 (LTS)
 Java SE 21 (LTS)	
 --------------
 Java 14 :record is a new type introduced in java 14
 
 java 17 features:
------------------
Pattern Matching For Switch Statements(Preview)
Pattern Matching for instanceof
Sealed Classes & Interfaces 
Enhanced Pseudo-Random Number Generators
Restore Always-Strict Floating-Point Semantics
Strongly Encapsulate JDK Internals
New macOS Rendering Pipeline
Deprecate the Applet API for Removal
Vector API (Second Incubator)
Deserialization Filters Based on Context (content-specific)
Activation of the Removal RMI
Remove the Security Manager.




Remove the Security Manager.
Reject the Security Manager so it can be taken out in a later update. Java 1.0 version starts Security Manager. For several years, it was never the main method of protecting client-side code.





Sealed Classes & Interfaces : 
Sealed Classes were proposed by JEP 360 and delivered in JDK 15 as a preview feature. They were proposed again, with some refinements, and delivered in JDK 16 as a preview feature. Now in JDK 17, Sealed Classes are being finalized with no changes from JDK 16.

 
 JDK 21
 ========
This release is the Reference Implementation of version 21 of the Java SE Platform, as specified by JSR 396 in the Java Community Process.

JDK 21 reached General Availability on 19 September 2023. Production-ready binaries under the GPL are available from Oracle; binaries from other vendors will follow shortly.

The features and schedule of this release were proposed and tracked via the JEP Process, as amended by the JEP 2.0 proposal. The release was produced using the JDK Release Process (JEP 3).

Features
430:	String Templates (Preview)
431:	Sequenced Collections
439:	Generational ZGC
440:	Record Patterns
441:	Pattern Matching for switch
442:	Foreign Function & Memory API (Third Preview)
443:	Unnamed Patterns and Variables (Preview)
444:	Virtual Threads
445:	Unnamed Classes and Instance Main Methods (Preview)
446:	Scoped Values (Preview)
448:	Vector API (Sixth Incubator)
449:	Deprecate the Windows 32-bit x86 Port for Removal
451:	Prepare to Disallow the Dynamic Loading of Agents
452:	Key Encapsulation Mechanism API
453:	Structured Concurrency (Preview)
JDK 21 will be a long-term support (LTS) release from most vendors. For a complete list of the JEPs integrated since the previous LTS release, JDK 17, 
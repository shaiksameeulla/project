00:00:00- Introduction
00:03:12 - Q1. @component vs @service vs @repository
00:04:12 - Q2. What will happen if you will use @service over a DAO?
00:06:40 - Q3.Explain spring Bean Lifecycle
00:11:05 -  Q4.how you will call the @Predestory marked methods in the standalone application.
00:16:58 - Q5.Explain the helper class that initializes and destroys the web application context.
00:18:40 - Q6. What are the RestClients you have used in your project?
00:20:10 - Q7.getForEntity() vs postForEntity()
00:21:19 - Q8. What are the uses of ResponseEntity?
00:22:10 - 09. What should be the delete API method status code?
00:22:20 - Q10. Why should you handle response timeout while calling any API?
00:25:10 - Q11. Explain the differences between Server timeout and Read timeout.
00:25:40 - Q12.  What is versioning in Rest? what are the ways that you can use to implement versioning? 
00:26:56 - Q13. How does Basic Authentication work in Rest API?
00:30:08 - Q14.  Should you use JWT or Session-based authentication in the microservices environment? 
00:34:18 -  Q15. What is content negotiation?
00:35:31 - Q16. What are the cross-cutting concerns in spring? how do you implement it in microservices architecture?
00:37:12 - Q17. How to create custom validators in spring?

00:38:19 - Q18.core java interview questions and answers for experienced
00:38:22 - Q19. How hashmap works internally?
00:32:50 - Q20. List vs Set
00:40:30- Q21. java interview questions coding
00:40:56- Q22. ArrayList Internal coding hands-on questions 
00:43:14-  Q23. Collection coding interview questions java
00:44:26 - Q24. defining the constructor capacity in Arraylist increases performance?
00:46:00 - Q25. How Arraylist works internally?
00:50:14- Q26. Difference between fail fast/fail safe collections 
00:52:16 - Q27. Which types of collections consume more memory; fail-fast or fail-safe?
00:53:03 - Q28. core java coding questions in collection iterator.
00:57:45 - Q29. Can you modify the collection return by Arrays.asList()?
01:01:45 - Q30. Questions on ConcurrentModificationException and CopyOnWriteArrayList.
01:04:40 - Q31. Explain the Signleton design pattern. How spring's singleton scope is different then GOF signleton?
01:08:50 - Q32. Give me a code walkthrough on the spring security internal workflow

01:16:14 - Thank you


What will happen if you will use @service over a DAO?
 Learn in-depth :-  https://youtu.be/CUQWZHjuq-w

Q1. @component vs @service vs @repository
https://youtu.be/G39Z3J_6lKY

 Q3.Explain spring Bean Lifecycle  Q4.how you will call the @Predestory marked methods in the standalone application.
https://youtu.be/hUYGGqoXEPc

 Q13. How does Basic Authentication work in Rest API?
https://youtu.be/L-pfk5wkNbI

 Q17. How to create custom validators in spring?
https://youtu.be/aNpJGvFR5uI


 Q19. How hashmap works internally?
https://www.youtube.com/watch?v=CojCE...

Q20. List vs Set Vs Vector (in-depth collection interview questions discussion)
https://youtu.be/GEzDJg8mlzk

Q23. Collection coding interview questions java
Print duplicate occurrences of string in java
https://www.youtube.com/watch?v=2PlWh...

Q31. Explain the Signleton design pattern. How spring's singleton scope is different then GOF signleton? (Spring bean scope)
https://youtu.be/xpKbs8FHUi4

01:08:50 - Q32. Give me a code walkthrough on the spring security internal workflow
https://youtu.be/u8fAxGCrqPA

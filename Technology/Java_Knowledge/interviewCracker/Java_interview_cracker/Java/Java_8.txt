Java 8 was released on 18th March 2014, 
so itâ€™s high time to look into Java 8 Features.
 In this tutorial, we will look into Java 8 features with examples.

https://www.journaldev.com/2763/java-8-functional-interfaces

https://dzone.com/articles/introduction-java-8-compact

Java 8 features

1. lambda expression
2. functional interfaces
3. default methods
4. static methods
5. predefined functional interfaces	
	a. predicate : returns boolean : boolean test(T)
	b.Function : takes intput and return something  R apply(T)
	c. Consumer :  takes input   void accept(T)
	d. Supplier : return output  R get()
6. :: double colon operator : method reference /constructor reference
7. Time API (joda time)
8. Streams  : collection.stream(),  Stream.of()
	filter : condition
	map : one to one mapping
	collect :
	count
	min(comparator)
	max(comparator)
	sorted
	sorted(comparator)
	foreach
	toArray
9 Collection API improvements
10 Concurrency API improvements
11 Java IO improvements
12 Miscellaneous Core API improvements

Inside anonymous inner class we can define variable that is called as instance variable  and this must be accessed by this keyword, to accesses enclosing class variable then we need to access as Outerclassname.this.instancevariable.
However in case of lambda express, we can define varible inside lambda expression but we call this as local variable. If you want to access enclosing variables then you can use this keyword

Method and Constructor References

A method reference is used to refer to a method without invoking it; a constructor reference is similarly used to refer to a constructor without creating a new instance of the named class or array type.


System::getProperty
System.out::println
"abc"::length
ArrayList::new
int[]::new


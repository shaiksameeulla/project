JAVA 9
https://www.journaldev.com/13106/java-9-modules

Oracle corp has postponed Java 9 release from March 2017 to September 2017.

In the same way, Java SE 9 is coming with three big features (plus few more enhancements and new features):

Java Module System (Jigsaw Project)
Java REPL
Milling Project Coin

1 Java 9 REPL (JShell)
2 Factory Methods for Immutable List, Set, Map and Map.Entry
3 Private methods in Interfaces
4 Java 9 Module System
5 Process API Improvements
6 Try With Resources Improvement
7 CompletableFuture API Improvements
8 Reactive Streams
9 Diamond Operator for Anonymous Inner Class
10 Optional Class Improvements
11 Stream API Improvements
12 Enhanced @Deprecated annotation
13 HTTP 2 Client
14 Multi-Resolution Image API
15 Miscellaneous Java 9 Features



List immutableList = List.of();
List immutableList = List.of("one","two","three");


Why do we need private methods in Interface?
Java 9 private methods in interfaces have following benefits.

No need to write duplicate code, hence more code reusability.
We got the choice to expose only our intended methods implementations to clients.
That’s all about Java 9 private methods in interfaces change.


Java 9 Module System
One of the big changes or java 9 feature is the Module System. Oracle Corp is going to introduce the following features as part of Jigsaw Project.

Modular JDK
Modular Java Source Code
Modular Run-time Images
Encapsulate Java Internal APIs
Java Platform Module System
Before Java SE 9 versions, we are using Monolithic Jars to develop Java-Based applications. This architecture has a lot of limitations and drawbacks. To avoid all these shortcomings, Java SE 9 is coming with the Module System.

JDK 9 is coming with 92 modules (may change in final release). We can use JDK Modules and also we can create our own modules as shown below:

Simple Module Example

module com.foo.bar { }
Here we are using ‘module’ to create a simple module. Each module has a name, related code, and other resources.
Higher-Order Function
A function that receives another function as an argument or that returns a new function or both is called Higher-order function. Higher-order functions are only possible because of the First-class function.


Let’s take some examples to understand better:

Example 1: Functions returning another function.


const greet =  function(name){
    return function(m){
   
        console.log(`Hi!! ${name}, ${m}`);
    }
}
 
const greet_message = greet('ABC');
greet_message("Welcome To GeeksForGeeks")
Note: We can also call the function like this also — greet(‘ABC’)(‘Welcome To GeeksForGeeks’), It will also give the same output.

Output:

Hi!! ABC, Welcome To GeeksForGeeks
Example 2: Passing Function as an argument. 


function greet(name){
    return `Hi!! ${name} `;
}
 
function greet_name(greeting,message,name){
       console.log(`${greeting(name)} ${message}`);
}
 
greet_name(greet,'Welcome To GeeksForGeeks','JavaScript');
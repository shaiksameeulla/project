Client renders:

loadJs==>Fetch Data ==>Render Components ==> Interactive

Serverside renders:
its additional layer on topof client render, This is for better use experiecnce at Netflix

Fetch Data ==>Render as HTML==>LoadJs==>Hydrate


New options:

entire app
Server (fetch Data==> render as HTML)==>Client (LoadJs==> hydrate)

apply this for  each component

THis happens with below
<Suspense fallback={<Spiner/>}>
<YourComponent>
</Suspense>


Suspense:
Streaming HTML
Selective Hydration

<Suspense> lets you display a fallback until its children have finished loading.


